#pragma once

#include <GL/glew.h>

#include <cmath>
#include <cstdint>
#include <cstdlib>
#include <iostream>
#include <memory>
#include <vector>

// TODO: move this somewhere eventually
struct Vertex {
  float x;
  float y;
  void print() {
    std::cout << "{ x: " << x << ", y: " << y << " }" << std::endl;
  }
};

class Map {
 public:
  Map() {
    glGenBuffers(1, &VBO);
    glGenVertexArrays(1, &VAO);
    glGenBuffers(1, &EBO);

    glBindVertexArray(VAO);

    glBindBuffer(GL_ARRAY_BUFFER, VBO);
    glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(Vertex),
                 &vertices.front(), GL_STATIC_DRAW);

    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);
    glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * sizeof(GLuint),
                 &indices.front(), GL_STATIC_DRAW);

    glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, sizeof(Vertex), (void*)0);
    glEnableVertexAttribArray(0);

    glBindVertexArray(0);
  }
  ~Map() {}

  void render() {
    glBindVertexArray(VAO);
    glDrawElements(GL_TRIANGLES, indices.size(), GL_UNSIGNED_INT, 0);
  }  // render the map

 private:
  unsigned int VBO;
  unsigned int EBO;
  unsigned int VAO;
  std::vector<Vertex> vertices{{-1.f, -1.f},        {-0.866667f, -1.f},
                               {-0.733333f, -1.f},  {-0.6f, -1.f},
                               {-0.466667f, -1.f},  {-0.333333f, -1.f},
                               {-0.2f, -1.f},       {-0.0666667f, -1.f},
                               {0.0666667f, -1.f},  {0.2f, -1.f},
                               {0.333333f, -1.f},   {0.466667f, -1.f},
                               {0.6f, -1.f},        {0.733333f, -1.f},
                               {0.866667f, -1.f},   {1.f, -1.f},
                               {-1.f, -0.8f},       {-0.866667f, -0.8f},
                               {-0.733333f, -0.8f}, {-0.6f, -0.8f},
                               {-0.466667f, -0.8f}, {-0.333333f, -0.8f},
                               {-0.2f, -0.8f},      {-0.0666667f, -0.8f},
                               {0.0666667f, -0.8f}, {0.2f, -0.8f},
                               {0.333333f, -0.8f},  {0.466667f, -0.8f},
                               {0.6f, -0.8f},       {0.733333f, -0.8f},
                               {0.866667f, -0.8f},  {1.f, -0.8f},
                               {-1.f, -0.6},        {-0.866667f, -0.6},
                               {-0.733333f, -0.6},  {-0.6f, -0.6},
                               {-0.466667f, -0.6},  {-0.333333f, -0.6},
                               {-0.2f, -0.6},       {-0.0666667f, -0.6f},
                               {0.0666667f, -0.6f}, {0.2f, -0.6},
                               {0.333333f, -0.6},   {0.466667f, -0.6},
                               {0.6f, -0.6},        {0.733333f, -0.6},
                               {0.866667f, -0.6},   {1.f, -0.6},
                               {-1.f, -0.4},        {-0.866667f, -0.4},
                               {-0.733333f, -0.4},  {-0.6f, -0.4},
                               {-0.466667f, -0.4},  {-0.333333f, -0.4},
                               {-0.2f, -0.4},       {-0.0666667f, -0.4f},
                               {0.0666667f, -0.4f}, {0.2f, -0.4},
                               {0.333333f, -0.4},   {0.466667f, -0.4},
                               {0.6f, -0.4},        {0.733333f, -0.4},
                               {0.866667f, -0.4},   {1.f, -0.4},
                               {-1.f, -0.2f},       {-0.866667f, -0.2f},
                               {-0.733333f, -0.2f}, {-0.6f, -0.2f},
                               {-0.466667f, -0.2f}, {-0.333333f, -0.2f},
                               {-0.2f, -0.2f},      {-0.0666667f, -0.2f},
                               {0.0666667f, -0.2f}, {0.2f, -0.2f},
                               {0.333333f, -0.2f},  {0.466667f, -0.2f},
                               {0.6f, -0.2f},       {0.733333f, -0.2f},
                               {0.866667f, -0.2f},  {1.f, -0.2f},
                               {-1.f, 0.f},         {-0.866667f, 0.f},
                               {-0.733333f, 0.f},   {-0.6f, 0.f},
                               {-0.466667f, 0.f},   {-0.333333f, 0.f},
                               {-0.2f, 0.f},        {-0.0666667f, 0.f},
                               {0.0666667f, 0.f},   {0.2f, 0.f},
                               {0.333333f, 0.f},    {0.466667f, 0.f},
                               {0.6f, 0.f},         {0.733333f, 0.f},
                               {0.866667f, 0.f},    {1.f, 0.f},
                               {-1.f, 0.2f},        {-0.866667f, 0.2f},
                               {-0.733333f, 0.2f},  {-0.6f, 0.2f},
                               {-0.466667f, 0.2f},  {-0.333333f, 0.2f},
                               {-0.2f, 0.2f},       {-0.0666667f, 0.2f},
                               {0.0666667f, 0.2f},  {0.2f, 0.2f},
                               {0.333333f, 0.2f},   {0.466667f, 0.2f},
                               {0.6f, 0.2f},        {0.733333f, 0.2f},
                               {0.866667f, 0.2f},   {1.f, 0.2f},
                               {-1.f, 0.4f},        {-0.866667f, 0.4f},
                               {-0.733333f, 0.4f},  {-0.6f, 0.4f},
                               {-0.466667f, 0.4f},  {-0.333333f, 0.4f},
                               {-0.2f, 0.4f},       {-0.0666667f, 0.4f},
                               {0.0666667f, 0.4f},  {0.2f, 0.4f},
                               {0.333333f, 0.4f},   {0.466667f, 0.4f},
                               {0.6f, 0.4f},        {0.733333f, 0.4f},
                               {0.866667f, 0.4f},   {1.f, 0.4f},
                               {-1.f, 0.6f},        {-0.866667f, 0.6f},
                               {-0.733333f, 0.6f},  {-0.6f, 0.6f},
                               {-0.466667f, 0.6f},  {-0.333333f, 0.6f},
                               {-0.2f, 0.6f},       {-0.0666667f, 0.6f},
                               {0.0666667f, 0.6f},  {0.2f, 0.6f},
                               {0.333333f, 0.6f},   {0.466667f, 0.6f},
                               {0.6f, 0.6f},        {0.733333f, 0.6f},
                               {0.866667f, 0.6f},   {1.f, 0.6f},
                               {-1.f, 0.8f},        {-0.866667f, 0.8f},
                               {-0.733333f, 0.8f},  {-0.6f, 0.8f},
                               {-0.466667f, 0.8f},  {-0.333333f, 0.8f},
                               {-0.2f, 0.8f},       {-0.0666667f, 0.8f},
                               {0.0666667f, 0.8f},  {0.2f, 0.8f},
                               {0.333333f, 0.8f},   {0.466667f, 0.8f},
                               {0.6f, 0.8f},        {0.733333f, 0.8f},
                               {0.866667f, 0.8f},   {1.f, 0.8f},
                               {-1.f, 1.f},         {-0.866667f, 1.f},
                               {-0.733333f, 1.f},   {-0.6f, 1.f},
                               {-0.466667f, 1.f},   {-0.333333f, 1.f},
                               {-0.2f, 1.f},        {-0.0666667f, 1.f},
                               {0.0666667f, 1.f},   {0.2f, 1.f},
                               {0.333333f, 1.f},    {0.466667f, 1.f},
                               {0.6f, 1.f},         {0.733333f, 1.f},
                               {0.866667f, 1.f},    {1.f, 1.f}};
  std::vector<GLuint> indices{
      0,   16,  17,  0,   1,   17,  1,   17,  18,  1,   2,   18,  2,   18,  19,
      2,   3,   19,  3,   19,  20,  3,   4,   20,  4,   20,  21,  4,   5,   21,
      5,   21,  22,  5,   6,   22,  6,   22,  23,  6,   7,   23,  7,   23,  24,
      7,   8,   24,  8,   24,  25,  8,   9,   25,  9,   25,  26,  9,   10,  26,
      10,  26,  27,  10,  11,  27,  11,  27,  28,  11,  12,  28,  12,  28,  29,
      12,  13,  29,  13,  29,  30,  13,  14,  30,  14,  30,  31,  14,  15,  31,
      16,  32,  33,  16,  17,  33,  17,  33,  34,  17,  18,  34,  18,  34,  35,
      18,  19,  35,  19,  35,  36,  19,  20,  36,  20,  36,  37,  20,  21,  37,
      21,  37,  38,  21,  22,  38,  22,  38,  39,  22,  23,  39,  23,  39,  40,
      23,  24,  40,  24,  40,  41,  24,  25,  41,  25,  41,  42,  25,  26,  42,
      26,  42,  43,  26,  27,  43,  27,  43,  44,  27,  28,  44,  28,  44,  45,
      28,  29,  45,  29,  45,  46,  29,  30,  46,  30,  46,  47,  30,  31,  47,
      32,  48,  49,  32,  33,  49,  33,  49,  50,  33,  34,  50,  34,  50,  51,
      34,  35,  51,  35,  51,  52,  35,  36,  52,  36,  52,  53,  36,  37,  53,
      37,  53,  54,  37,  38,  54,  38,  54,  55,  38,  39,  55,  39,  55,  56,
      39,  40,  56,  40,  56,  57,  40,  41,  57,  41,  57,  58,  41,  42,  58,
      42,  58,  59,  42,  43,  59,  43,  59,  60,  43,  44,  60,  44,  60,  61,
      44,  45,  61,  45,  61,  62,  45,  46,  62,  46,  62,  63,  46,  47,  63,
      48,  64,  65,  48,  49,  65,  49,  65,  66,  49,  50,  66,  50,  66,  67,
      50,  51,  67,  51,  67,  68,  51,  52,  68,  52,  68,  69,  52,  53,  69,
      53,  69,  70,  53,  54,  70,  54,  70,  71,  54,  55,  71,  55,  71,  72,
      55,  56,  72,  56,  72,  73,  56,  57,  73,  57,  73,  74,  57,  58,  74,
      58,  74,  75,  58,  59,  75,  59,  75,  76,  59,  60,  76,  60,  76,  77,
      60,  61,  77,  61,  77,  78,  61,  62,  78,  62,  78,  79,  62,  63,  79,
      64,  80,  81,  64,  65,  81,  65,  81,  82,  65,  66,  82,  66,  82,  83,
      66,  67,  83,  67,  83,  84,  67,  68,  84,  68,  84,  85,  68,  69,  85,
      69,  85,  86,  69,  70,  86,  70,  86,  87,  70,  71,  87,  71,  87,  88,
      71,  72,  88,  72,  88,  89,  72,  73,  89,  73,  89,  90,  73,  74,  90,
      74,  90,  91,  74,  75,  91,  75,  91,  92,  75,  76,  92,  76,  92,  93,
      76,  77,  93,  77,  93,  94,  77,  78,  94,  78,  94,  95,  78,  79,  95,
      80,  96,  97,  80,  81,  97,  81,  97,  98,  81,  82,  98,  82,  98,  99,
      82,  83,  99,  83,  99,  100, 83,  84,  100, 84,  100, 101, 84,  85,  101,
      85,  101, 102, 85,  86,  102, 86,  102, 103, 86,  87,  103, 87,  103, 104,
      87,  88,  104, 88,  104, 105, 88,  89,  105, 89,  105, 106, 89,  90,  106,
      90,  106, 107, 90,  91,  107, 91,  107, 108, 91,  92,  108, 92,  108, 109,
      92,  93,  109, 93,  109, 110, 93,  94,  110, 94,  110, 111, 94,  95,  111,
      96,  112, 113, 96,  97,  113, 97,  113, 114, 97,  98,  114, 98,  114, 115,
      98,  99,  115, 99,  115, 116, 99,  100, 116, 100, 116, 117, 100, 101, 117,
      101, 117, 118, 101, 102, 118, 102, 118, 119, 102, 103, 119, 103, 119, 120,
      103, 104, 120, 104, 120, 121, 104, 105, 121, 105, 121, 122, 105, 106, 122,
      106, 122, 123, 106, 107, 123, 107, 123, 124, 107, 108, 124, 108, 124, 125,
      108, 109, 125, 109, 125, 126, 109, 110, 126, 110, 126, 127, 110, 111, 127,
      112, 128, 129, 112, 113, 129, 113, 129, 130, 113, 114, 130, 114, 130, 131,
      114, 115, 131, 115, 131, 132, 115, 116, 132, 116, 132, 133, 116, 117, 133,
      117, 133, 134, 117, 118, 134, 118, 134, 135, 118, 119, 135, 119, 135, 136,
      119, 120, 136, 120, 136, 137, 120, 121, 137, 121, 137, 138, 121, 122, 138,
      122, 138, 139, 122, 123, 139, 123, 139, 140, 123, 124, 140, 124, 140, 141,
      124, 125, 141, 125, 141, 142, 125, 126, 142, 126, 142, 143, 126, 127, 143,
      128, 144, 145, 128, 129, 145, 129, 145, 146, 129, 130, 146, 130, 146, 147,
      130, 131, 147, 131, 147, 148, 131, 132, 148, 132, 148, 149, 132, 133, 149,
      133, 149, 150, 133, 134, 150, 134, 150, 151, 134, 135, 151, 135, 151, 152,
      135, 136, 152, 136, 152, 153, 136, 137, 153, 137, 153, 154, 137, 138, 154,
      138, 154, 155, 138, 139, 155, 139, 155, 156, 139, 140, 156, 140, 156, 157,
      140, 141, 157, 141, 157, 158, 141, 142, 158, 142, 158, 159, 142, 143, 159,
      144, 160, 161, 144, 145, 161, 145, 161, 162, 145, 146, 162, 146, 162, 163,
      146, 147, 163, 147, 163, 164, 147, 148, 164, 148, 164, 165, 148, 149, 165,
      149, 165, 166, 149, 150, 166, 150, 166, 167, 150, 151, 167, 151, 167, 168,
      151, 152, 168, 152, 168, 169, 152, 153, 169, 153, 169, 170, 153, 154, 170,
      154, 170, 171, 154, 155, 171, 155, 171, 172, 155, 156, 172, 156, 172, 173,
      156, 157, 173, 157, 173, 174, 157, 158, 174, 158, 174, 175, 158, 159, 175,
  };
  std::vector<uint8_t> map_data;
};
